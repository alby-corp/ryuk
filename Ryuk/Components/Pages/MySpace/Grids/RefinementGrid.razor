@using Ryuk.Extensions
@using Ryuk.Components.Pages.MySpace.Actions
@if (Issues is null || _items is null)
{
    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center">
        <MudProgressCircular Color="Color.Secondary" Indeterminate="true"/>
    </MudStack>
    return;
}

<MudDataGrid @ref="grid" T="RefinementModel" Items="@_items" Dense="true"
             EditMode="DataGridEditMode.Form" EditTrigger="DataGridEditTrigger.Manual" ReadOnly="@false" CommittedItemChanges="CommittedItemChanges">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Refinement Issues</MudText>
    </ToolBarContent>
    <Columns>

        <TemplateColumn Title="Type" SortBy="model => model.Type">
            <CellTemplate>
                <MudImage Src="@context.Item.TypeIconUrl"/>
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Title="Status" SortBy="model => model.Status">
            <CellTemplate>
                <MudChip Variant="Variant.Outlined" Color="@context.Item.StatusColor">@context.Item.Status</MudChip>
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Title="Key" SortBy="model => model.Key">
            <CellTemplate>
                <MudBreadcrumbs Items="@context.Item.Breadcrumbs">
                    <ItemTemplate Context="item">
                        <MudLink Href="@item.Href">@item.Text</MudLink>
                    </ItemTemplate>
                </MudBreadcrumbs>
            </CellTemplate>
        </TemplateColumn>

        <TemplateColumn Title="Summary" SortBy="model => model.Summary">
            <CellTemplate>
                @context.Item.Summary
            </CellTemplate>
        </TemplateColumn>

        <PropertyColumn Title="Original Estimate" Property="model => model.OriginalEstimate" SortBy="model => model.OriginalEstimateInSeconds" Required>
            <EditTemplate>
                <MudTextField
                    Mask="tagMask"
                    Label="Original Estimate"
                    For="@(() => context.Item.OriginalEstimate)"
                    @bind-Value="@context.Item.OriginalEstimate" Variant="Variant.Text"
                    Required RequiredError="Provide a Original Estimate"/>
            </EditTemplate>
        </PropertyColumn>

        <TemplateColumn Title="Actions" Sortable="false">
            <CellTemplate>
                <MudStack Row Justify="Justify.FlexStart" AlignItems="AlignItems.Start">
                    <CascadingValue Value="@Issues.GetByKey(context.Item.Key)">
                        <ActionButtons/>
                    </CascadingValue>
                    <MudButton Variant="Variant.Outlined" OnClick="@context.Actions.StartEditingItemAsync">Edit</MudButton>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
    <PagerContent>
        <MudDataGridPager PageSizeOptions="@(new[] { 5, 10, 15, 20 })"/>
    </PagerContent>

</MudDataGrid>